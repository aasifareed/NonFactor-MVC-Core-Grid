@model IQueryable<FinalMVC6Grid.Models.EmployeeViewModel>
@using System;
@using NonFactors.Mvc.Grid;
@{
    ViewData["Title"] = "Home Page";
}

@{
    List<SelectListItem> selectListItems = new List<SelectListItem>();
    selectListItems = ViewBag.EmployeeStatusList;
}
<link href="~/css/mvc-grid/mvc-grid.css" rel="stylesheet" />
<br />
<br />
<br />
@(Html
    .Grid(Model)
    .Build(columns =>
    {
        columns.Add(model => model.Name).Titled("Name");
        columns.Add(model => model.Email).Titled("Email Address");
        columns.Add(model => model.DateOfBirth).Titled("Date of Birth").Formatted("{0:d}").Filterable(GridFilterType.Double);
        columns.Add(model => model.EmployeeStatus).Titled("Employee Status").UsingFilterOptions(selectListItems
        ).Filterable(GridFilterType.Multi);

    })
    .Empty("No data found")
    .Filterable()
    .Sortable()
    .Pageable()
)
<script src="~/js/mvc-grid/mvc-grid.js"></script>
<script>

    class MvcGridTextFilter extends MvcGridFilter {
        constructor(column) {
            super(column);

            this.cssClasses = "mvc-grid-text-filter";
            if (column.name == "Name") {
                this.methods = ["equals", "not-equals"];
            } else if (column.name == "Email") {
                this.methods = ["contains"];
            } else {
                this.methods = ["contains", "equals", "not-equals", "starts-with", "ends-with"];
            }

        }
    }

    class MvcGridDateFilter extends MvcGridFilter {
        constructor(column) {
            super(column);

            this.cssClasses = "mvc-grid-date-filter";
            if (column.name == "DateOfBirth") {
                this.methods = ["later-than-or-equal", "earlier-than-or-equal"];
            } else {
                this.methods = ["equals", "not-equals", "earlier-than", "later-than", "earlier-than-or-equal", "later-than-or-equal"];
            }

        }
    }

    MvcGrid.lang = {
        default: {
            "equals": "Equals",
            "not-equals": "Not equals"
        },
        text: {
            "contains": "Contains",
            "equals": "Equals",
            "not-equals": "Not equals",
            "starts-with": "Starts with",
            "ends-with": "Ends with"
        },
        number: {
            "equals": "Equals",
            "not-equals": "Not equals",
            "less-than": "Less than",
            "greater-than": "Greater than",
            "less-than-or-equal": "Less than or equal",
            "greater-than-or-equal": "Greater than or equal"
        },
        date: {
            "equals": "Equals",
            "not-equals": "Not equals",
            "earlier-than": "Earlier than",
            "later-than": "Later than",
            "earlier-than-or-equal": "From",
            "later-than-or-equal": "To",
        },
        guid: {
            "equals": "Equals",
            "not-equals": "Not equals"
        },
        filter: {
            "apply": "&#10003;",
            "remove": "&#10008;"
        },
        operator: {
            "select": "",
            "and": "and",
            "or": "or"
        }
    };

</script>
